# homepage.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Product Types</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
</head>
<body>
    <div class="container mt-5">
        <h1 class="mb-4">Product Types</h1>

        <!-- Search Form -->
        <form method="get" action="{% url 'search_results' %}" class="mb-4">
            <div class="input-group">
                <input type="text" name="q" class="form-control" placeholder="Search products...">
                <button class="btn btn-outline-primary" type="submit">Search</button>
            </div>
        </form>

        <div class="list-group">
            {% for product_type in product_types %}
                <a href="{% url 'product_list' product_type.id %}" class="list-group-item list-group-item-action">
                    {{ product_type.type_name }}
                </a>
            {% endfor %}
        </div>
    </div>
</body>
</html>

# views.py
def search_results(request):
    query = request.GET.get('q')
    products = Product.objects.filter(
        Q(name__icontains=query) | Q(description__icontains=query)
    )
    return render(request, 'search_results.html', {'products': products, 'query': query, 'view_name': 'search_results'})

# urls.py
urlpatterns = [
    path('admin/', admin.site.urls),
    path('', views.homepage, name='homepage'),
    path('products/<int:type_id>/', views.product_list, name='product_list'),
    path('product/<int:product_id>/', views.product_detail, name='product_detail'),
    path('search/', views.search_results, name='search_results'),
] + static(settings.STATIC_URL, document_root=settings.STATICFILES_DIRS[0])

# search_results.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Search Results</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
</head>
<body>
    <div class="container mt-5">
        <h1 class="mb-4">Search Results for "{{ query }}"</h1>
        <div class="row">
            {% for product in products %}
                <div class="col-md-4 mb-4">
                    <div class="card">
                        {% if product.productimage_set.exists %}
                            <img src="/static/images/{{ product.productimage_set.first.image_url }}" class="card-img-top" alt="{{ product.name }}">
                        {% endif %}
                        <div class="card-body">
                            <h5 class="card-title">{{ product.name }}</h5>
                            <p class="card-text">{{ product.description }}</p>
                            <p class="card-text">Price: ${{ product.price }}</p>
                            <a href="{% url 'product_detail' product.id %}" class="btn btn-primary">View Details</a>
                        </div>
                    </div>
                </div>
            {% endfor %}
        </div>
        <a href="{% url 'homepage' %}" class="btn btn-secondary">Back to Homepage</a>
    </div>
</body>
</html>

from django.db.models import Q


=====================================================
# search_results.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Search Results</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
</head>
<body>
    <div class="container mt-5">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="{% url 'homepage' %}">Home</a></li>
                <li class="breadcrumb-item active" aria-current="page">Search Results</li>
            </ol>
        </nav>
        
        <h1 class="mb-4">Search Results for "{{ query }}"</h1>

        <div class="row mb-3">
            <div class="col-md-12">
                <div class="btn-group" role="group">
                    <a href="?q={{ query }}&sort_by=name&order={% if sort_by == 'name' and order == 'asc' %}desc{% else %}asc{% endif %}" class="btn btn-outline-primary">
                        Name {% if sort_by == 'name' and order == 'asc' %}↑{% elif sort_by == 'name' and order == 'desc' %}↓{% endif %}
                    </a>
                    <a href="?q={{ query }}&sort_by=price&order={% if sort_by == 'price' and order == 'asc' %}desc{% else %}asc{% endif %}" class="btn btn-outline-primary">
                        Price {% if sort_by == 'price' and order == 'asc' %}↑{% elif sort_by == 'price' and order == 'desc' %}↓{% endif %}
                    </a>
                </div>
            </div>
        </div>

        <div class="row">
            {% for product in products %}
                <div class="col-md-4 mb-4">
                    <div class="card">
                        {% if product.productimage_set.exists %}
                            <img src="/static/images/{{ product.productimage_set.first.image_url }}" class="card-img-top" alt="{{ product.name }}">
                        {% endif %}
                        <div class="card-body">
                            <h5 class="card-title">{{ product.name }}</h5>
                            <p class="card-text">{{ product.description }}</p>
                            <p class="card-text">Price: ${{ product.price }}</p>
                            <a href="{% url 'product_detail' product.id %}" class="btn btn-primary">View Details</a>
                        </div>
                    </div>
                </div>
            {% endfor %}
        </div>
        <a href="{% url 'homepage' %}" class="btn btn-secondary">Back to Homepage</a>
    </div>
</body>
</html>


# views.py
from django.db.models import Q

def search_results(request):
    query = request.GET.get('q')
    sort_by = request.GET.get('sort_by', 'name')
    order = request.GET.get('order', 'asc')
    
    products = Product.objects.filter(
        Q(name__icontains=query) | Q(description__icontains=query)
    )
    
    if sort_by == 'price':
        products = products.order_by('price' if order == 'asc' else '-price')
    else:
        products = products.order_by('name' if order == 'asc' else '-name')
    
    return render(request, 'search_results.html', {'products': products, 'query': query, 'sort_by': sort_by, 'order': order, 'view_name': 'search_results'})









